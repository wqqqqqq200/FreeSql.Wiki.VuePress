import{_ as s}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as r,c as _,a as l,b as t,d as n,w as u,e as i,r as o}from"./app.39f5e7e1.js";const c={},h=l("h1",{id:"与-entityframework-比较",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#与-entityframework-比较","aria-hidden":"true"},"#"),t(" 与 EntityFramework 比较")],-1),a=l("p",null,"为什么要写这篇文章？",-1),E=l("p",null,"希望针对 SEO 优化搜索引擎，让更多中国人知道并且使用。目前百度搜索 .NET ORM 全是 sqlsugar，我个人是无语的，每每一个人进群第一件事就是拿来比较，每天要重复回答、重复解答、说服他们。想说服标签是名气大、使用者多的同类型 .NET ORM 非常困难，最多只能让他们勉强接受。",-1),T=l("p",null,"FreeSql 不愿做自己发光的金子，希望在 2020 年 写下这篇完整一点的 .NET ORM 比较，为准备使用 FreeSql 的朋友解惑，能排上百度搜索引擎当然再好不过了。",-1),O={href:"https://files.cnblogs.com/files/kellynic/ORM_VS.zip",target:"_blank",rel:"noopener noreferrer"},M=l("h2",{id:"基础信息比较",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#基础信息比较","aria-hidden":"true"},"#"),t(" 基础信息比较")],-1),R=l("thead",null,[l("tr",null,[l("th",null,"功能项"),l("th",null,"FreeSql"),l("th",null,"EFCore"),l("th",null,"SqlSugar")])],-1),N=l("tr",null,[l("td",null,"出生时间"),l("td",null,"2018 年 12 月"),l("td",null,"2015 年(约)"),l("td",null,"2014 年(约)")],-1),p=l("tr",null,[l("td",null,"开源协议"),l("td",null,"MIT"),l("td",null,"Apache-2.0"),l("td",null,"Apache-2.0")],-1),m=l("td",null,"所属机构",-1),S={href:"https://github.com/dotnetcore",target:"_blank",rel:"noopener noreferrer"},f=l("td",null,"dotnet",-1),g=l("td",null,"sunkaixuan(个人)",-1),C=l("tr",null,[l("td",null,"单元测试数量"),l("td",null,"5500+"),l("td",null,"很多"),l("td",null,"无")],-1),F=l("tr",null,[l("td",null,"github star"),l("td",null,"2.1k+"),l("td",null,"9.5k+"),l("td",null,"3.1k+")],-1),b=l("tr",null,[l("td",null,"github issues"),l("td",null,"活跃"),l("td",null,"活跃"),l("td",null,"不活跃")],-1),q=l("tr",null,[l("td",null,"支持平台"),l("td",null,".NET4.0+、.NETCore"),l("td",null,".NETCore"),l("td",null,".NET4.5+、.NETCore")],-1),y=l("tr",null,[l("td",null,"支持数据库"),l("td",null,"很多，并且行为一致"),l("td",null,"很多"),l("td",null,"SqlServer/MySql/Sqlite/Oracle")],-1),k=l("tr",null,[l("td",null,"生命周期"),l("td",null,"Singleton"),l("td",null,"Scoped"),l("td",null,"Scoped")],-1),D=l("tr",null,[l("td",null,"使用方式"),l("td",null,"IFreeSql、Repository"),l("td",null,"DbContext"),l("td",null,"SugarClient")],-1),x=i('<p>FreeSql .NET ORM 支持 MySql/SqlServer/PostgreSQL/Oracle/Sqlite/Firebird/达梦/人大金仓/神舟通用/Access。</p><p>.NET ORM 各有自已看家本领，本文主要按 FreeSql 提供的功能进行列举比较，如有冒犯请见谅，也欢迎向 FreeSql 提出功能建议。</p><p>每个功能实现的深度层次不一样（比如 EFCore 支持 SqlServer 2012，FreeSql 支持 SqlServer 2005），很难彻底比较，提示：</p><ul><li>本文比较的功能 FreeSql 每种数据库基本都有提供，不像 EFCore 偏向 SqlServer</li><li>本文只比较官方提供的功能（不包含第三方扩展）</li></ul><p><img src="https://img2020.cnblogs.com/blog/31407/202009/31407-20200914063104631-2088330287.png" alt="" loading="lazy"></p><p><img src="https://img2020.cnblogs.com/blog/31407/202009/31407-20200914063148941-1489586974.png" alt="" loading="lazy"></p><p><img src="https://img2020.cnblogs.com/blog/31407/202009/31407-20200914063955435-856878176.png" alt="" loading="lazy"></p><h2 id="net-orm-整体功能比较" tabindex="-1"><a class="header-anchor" href="#net-orm-整体功能比较" aria-hidden="true">#</a> .NET ORM 整体功能比较</h2>',8),v=l("thead",null,[l("tr",null,[l("th",null,"功能项"),l("th",null,"FreeSql"),l("th",null,"EFCore"),l("th",null,"SqlSugar")])],-1),w=l("tr",null,[l("td",null,".NET ORM CodeFirst 根据实体类型，创建表结构"),l("td",null,"✔"),l("td",null,"✔"),l("td",null,"✔")],-1),U=l("tr",null,[l("td",null,".NET ORM CodeFirst 根据实体类型，对比表结构"),l("td",null,"✔"),l("td",null,"✔"),l("td",null,"-")],-1),L=l("tr",null,[l("td",null,".NET ORM CodeFirst 根据实体类型注释，迁移表结构备注"),l("td",null,"✔"),l("td",null,"-"),l("td",null,"-")],-1),A=l("tr",null,[l("td",null,".NET ORM CodeFirst FluentApi"),l("td",null,"✔"),l("td",null,"✔"),l("td",null,"-")],-1),I=l("tr",null,[l("td",null,".NET ORM CodeFirst FluentApi 语法兼容 EFCore"),l("td",null,"✔"),l("td",null,"✔"),l("td",null,"-")],-1),W=l("tr",null,[l("td",null,".NET ORM CodeFirst 实体特性兼容 EFCore"),l("td",null,"✔"),l("td",null,"✔"),l("td",null,"-")],-1),V=l("tr",null,[l("td",null,".NET ORM CodeFirst 自定义实体特性(Aop)"),l("td",null,"✔"),l("td",null,"-"),l("td",null,"✔")],-1),z=l("tr",null,[l("td",null,".NET ORM CodeFirst 类型转换映射(MapType)"),l("td",null,"✔"),l("td",null,"✔"),l("td",null,"-")],-1),B=l("tr",null,[l("td",null,".NET ORM DbFirst 根据数据库，生成实体类"),l("td",null,"✔"),l("td",null,"✔"),l("td",null,"✔")],-1),Q=l("tr",null,[l("td",null,".NET ORM 导航属性(OneToOne)"),l("td",null,"✔"),l("td",null,"✔"),l("td",null,"-")],-1),P=l("tr",null,[l("td",null,".NET ORM 导航属性(ManyToOne)"),l("td",null,"✔"),l("td",null,"✔"),l("td",null,"-")],-1),G=l("tr",null,[l("td",null,".NET ORM 导航属性(OneToMany)"),l("td",null,"✔"),l("td",null,"✔"),l("td",null,"-")],-1),H=l("tr",null,[l("td",null,".NET ORM 导航属性(ManyToMany)"),l("td",null,"✔"),l("td",null,"-"),l("td",null,"-")],-1),J=l("td",null,"✔",-1),K=l("td",null,"-",-1),j=l("td",null,"-",-1),X=l("tr",null,[l("td",null,".NET ORM 导航属性延时加载、贪婪加载、级联保存"),l("td",null,"✔"),l("td",null,"✔"),l("td",null,"-")],-1),Y=l("tr",null,[l("td",null,".NET ORM 自定义表达式树解析"),l("td",null,"✔"),l("td",null,"-"),l("td",null,"-")],-1),Z=l("tr",null,[l("td",null,".NET ORM 全局过滤器"),l("td",null,"✔"),l("td",null,"✔"),l("td",null,"-")],-1),$=l("tr",null,[l("td",null,".NET ORM 事务"),l("td",null,"✔"),l("td",null,"✔"),l("td",null,"✔")],-1),ll=l("tr",null,[l("td",null,".NET ORM 读写分离"),l("td",null,"✔"),l("td",null,"-"),l("td",null,"✔")],-1),tl=l("tr",null,[l("td",null,".NET ORM 分表分库"),l("td",null,"✔"),l("td",null,"-"),l("td",null,"-")],-1),nl=l("tr",null,[l("td",null,".NET ORM 仓储 Repository"),l("td",null,"✔"),l("td",null,"-"),l("td",null,"-")],-1),dl=l("tr",null,[l("td",null,".NET ORM 工作单元 UnitOfWork"),l("td",null,"✔"),l("td",null,"-"),l("td",null,"-")],-1),ul=l("tr",null,[l("td",null,".NET ORM 工作单元管理器 UnitOfWorkManager"),l("td",null,"✔"),l("td",null,"-"),l("td",null,"-")],-1),el=l("tr",null,[l("td",null,".NET ORM DbContext 状态管理"),l("td",null,"✔"),l("td",null,"✔"),l("td",null,"-")],-1),ol=l("h2",{id:"net-orm-crud-功能比较",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#net-orm-crud-功能比较","aria-hidden":"true"},"#"),t(" .NET ORM CRUD 功能比较")],-1),sl=l("thead",null,[l("tr",null,[l("th",null,"功能项"),l("th",null,"FreeSql"),l("th",null,"EFCore"),l("th",null,"SqlSugar")])],-1),rl=l("tr",null,[l("td",null,".NET ORM CRUD 时，映射动态表名"),l("td",null,"✔"),l("td",null,"-"),l("td",null,"✔")],-1),_l=l("tr",null,[l("td",null,".NET ORM CRUD 时，使用参数化 SQL 执行"),l("td",null,"✔"),l("td",null,"✔"),l("td",null,"✔")],-1),il=l("tr",null,[l("td",null,".NET ORM CRUD 时，不使用参数化 SQL 执行(NoneParameter)"),l("td",null,"✔"),l("td",null,"-"),l("td",null,"-")],-1),cl=l("tr",null,[l("td",null,".NET ORM CRUD 时，获取对应的 SQL(ToSql)"),l("td",null,"✔"),l("td",null,"-"),l("td",null,"✔")],-1),hl=l("tr",null,[l("td",null,".NET ORM CRUD 时，统一审计实体属性值(Aop.AuditValue)"),l("td",null,"✔"),l("td",null,"-"),l("td",null,"-")],-1),al=l("tr",null,[l("td"),l("td"),l("td"),l("td")],-1),El=l("tr",null,[l("td",null,".NET ORM 插入(单条)"),l("td",null,"✔"),l("td",null,"✔"),l("td",null,"✔")],-1),Tl=l("tr",null,[l("td",null,".NET ORM 插入时，忽略/指定列"),l("td",null,"✔"),l("td",null,"-"),l("td",null,"✔")],-1),Ol=l("tr",null,[l("td",null,".NET ORM 插入时，返回影响的行数"),l("td",null,"✔"),l("td",null,"-"),l("td",null,"✔")],-1),Ml=l("tr",null,[l("td",null,".NET ORM 插入时，返回插入后的自增值"),l("td",null,"✔"),l("td",null,"✔"),l("td",null,"✔")],-1),Rl=l("tr",null,[l("td",null,".NET ORM 插入时，返回插入后的记录"),l("td",null,"✔"),l("td",null,"-"),l("td",null,"-")],-1),Nl=l("tr",null,[l("td",null,".NET ORM 插入时，Insert Ignore Into"),l("td",null,"✔"),l("td",null,"-"),l("td",null,"-")],-1),pl=l("tr",null,[l("td",null,".NET ORM 插入时，On Duplicate Key Update"),l("td",null,"✔"),l("td",null,"-"),l("td",null,"-")],-1),ml=l("tr",null,[l("td",null,".NET ORM 插入时，On Conflict Do Update"),l("td",null,"✔"),l("td",null,"-"),l("td",null,"-")],-1),Sl={href:"https://www.cnblogs.com/kellynic/p/10557882.html",target:"_blank",rel:"noopener noreferrer"},fl=l("td",null,"✔",-1),gl=l("td",null,"-",-1),Cl=l("td",null,"✔",-1),Fl=l("td",null,"✔",-1),bl=l("td",null,"-",-1),ql=l("td",null,"-",-1),yl=l("tr",null,[l("td",null,".NET ORM 批量插入时，使用 BulkCopy"),l("td",null,"✔"),l("td",null,"-"),l("td",null,"-")],-1),kl=l("tr",null,[l("td"),l("td"),l("td"),l("td")],-1),Dl=l("tr",null,[l("td",null,".NET ORM 更新(单条)"),l("td",null,"✔"),l("td",null,"✔"),l("td",null,"✔")],-1),xl=l("tr",null,[l("td",null,".NET ORM 更新时，动态条件(WhereDynamic)"),l("td",null,"✔"),l("td",null,"-"),l("td",null,"✔")],-1),vl=l("tr",null,[l("td",null,".NET ORM 更新时，根据实体对象更新"),l("td",null,"✔"),l("td",null,"-"),l("td",null,"✔")],-1),wl=l("tr",null,[l("td",null,".NET ORM 更新时，根据状态管理只更新有变化的属性"),l("td",null,"✔"),l("td",null,"✔"),l("td",null,"-")],-1),Ul=l("tr",null,[l("td",null,".NET ORM 更新时，忽略/指定列"),l("td",null,"✔"),l("td",null,"-"),l("td",null,"✔")],-1),Ll=l("tr",null,[l("td",null,".NET ORM 更新时，原子性 set num=num+1"),l("td",null,"✔"),l("td",null,"-"),l("td",null,"✔")],-1),Al=l("tr",null,[l("td",null,".NET ORM 更新时，指定条件"),l("td",null,"✔"),l("td",null,"-"),l("td",null,"✔")],-1),Il=l("tr",null,[l("td",null,".NET ORM 更新时，自动附加全局过滤器条件"),l("td",null,"✔"),l("td",null,"-"),l("td",null,"-")],-1),Wl=l("tr",null,[l("td",null,".NET ORM 更新时，不需要先查询"),l("td",null,"✔"),l("td",null,"-"),l("td",null,"✔")],-1),Vl=l("tr",null,[l("td",null,".NET ORM 更新时，使用乐观行锁"),l("td",null,"✔"),l("td",null,"✔"),l("td",null,"-")],-1),zl=l("tr",null,[l("td",null,".NET ORM 更新时，使用悲观锁"),l("td",null,"✔"),l("td",null,"-"),l("td",null,"-")],-1),Bl=l("tr",null,[l("td",null,".NET ORM 更新时，返回影响的行数"),l("td",null,"✔"),l("td",null,"-"),l("td",null,"✔")],-1),Ql=l("tr",null,[l("td",null,".NET ORM 更新时，返回更新后的记录"),l("td",null,"✔"),l("td",null,"-"),l("td",null,"-")],-1),Pl=l("tr",null,[l("td",null,".NET ORM 批量更新"),l("td",null,"✔"),l("td",null,"-"),l("td",null,"-")],-1),Gl=l("tr",null,[l("td"),l("td"),l("td"),l("td")],-1),Hl=l("tr",null,[l("td",null,".NET ORM 删除(单条)"),l("td",null,"✔"),l("td",null,"✔"),l("td",null,"✔")],-1),Jl=l("tr",null,[l("td",null,".NET ORM 删除时，动态条件(WhereDynamic)"),l("td",null,"✔"),l("td",null,"-"),l("td",null,"✔")],-1),Kl=l("tr",null,[l("td",null,".NET ORM 删除时，指定条件"),l("td",null,"✔"),l("td",null,"-"),l("td",null,"✔")],-1),jl=l("tr",null,[l("td",null,".NET ORM 删除时，自动附加全局过滤器条件"),l("td",null,"✔"),l("td",null,"-"),l("td",null,"-")],-1),Xl=l("tr",null,[l("td",null,".NET ORM 删除时，不需要先查询"),l("td",null,"✔"),l("td",null,"-"),l("td",null,"✔")],-1),Yl=l("tr",null,[l("td",null,".NET ORM 删除时，返回影响的行数"),l("td",null,"✔"),l("td",null,"-"),l("td",null,"✔")],-1),Zl=l("tr",null,[l("td",null,".NET ORM 删除时，返回插入后的记录"),l("td",null,"✔"),l("td",null,"-"),l("td",null,"-")],-1),$l=l("tr",null,[l("td",null,".NET ORM 级联保存"),l("td",null,"✔"),l("td",null,"✔"),l("td",null,"-")],-1),lt=l("tr",null,[l("td",null,".NET ORM 添加或更新"),l("td",null,"✔"),l("td",null,"-"),l("td",null,"✔")],-1),tt=l("td",null,"✔",-1),nt=l("td",null,"-",-1),dt=l("td",null,"-",-1),ut=l("td",null,"✔",-1),et=l("td",null,"✔",-1),ot=l("td",null,"-",-1),st=l("tr",null,[l("td"),l("td"),l("td"),l("td")],-1),rt=l("tr",null,[l("td",null,".NET ORM 查询(单条)"),l("td",null,"✔"),l("td",null,"✔"),l("td",null,"✔")],-1),_t=l("tr",null,[l("td",null,".NET ORM 查询时，分页"),l("td",null,"✔"),l("td",null,"✔"),l("td",null,"✔")],-1),it=l("tr",null,[l("td",null,".NET ORM 查询时，分页支持 SqlServer2008"),l("td",null,"✔"),l("td",null,"-"),l("td",null,"✔")],-1),ct=l("tr",null,[l("td",null,".NET ORM 查询时，动态条件(WhereDynamic)"),l("td",null,"✔"),l("td",null,"-"),l("td",null,"✔")],-1),ht=l("td",null,"✔",-1),at=l("td",null,"-",-1),Et=l("td",null,"✔",-1),Tt=l("tr",null,[l("td",null,".NET ORM 查询时，自动附加全局过滤器条件"),l("td",null,"✔"),l("td",null,"-"),l("td",null,"-")],-1),Ot=l("tr",null,[l("td",null,".NET ORM 查询时，多表条件传播(WhereCascade)"),l("td",null,"✔"),l("td",null,"-"),l("td",null,"-")],-1),Mt=l("tr",null,[l("td",null,".NET ORM 查询时，在 lambda 中使用导航属性"),l("td",null,"✔"),l("td",null,"✔"),l("td",null,"-")],-1),Rt=l("tr",null,[l("td",null,".NET ORM 查询时，用 Dto 映射只需要查询的字段"),l("td",null,"✔"),l("td",null,"-"),l("td",null,"-")],-1),Nt=l("tr",null,[l("td",null,".NET ORM 查询时，传 Sql 作二次查询(WithSql)"),l("td",null,"✔"),l("td",null,"-"),l("td",null,"✔")],-1),pt=l("tr",null,[l("td",null,".NET ORM 查询时，子查询(Exists)"),l("td",null,"✔"),l("td",null,"-"),l("td",null,"✔")],-1),mt=l("tr",null,[l("td",null,".NET ORM 查询时，子查询(In)"),l("td",null,"✔"),l("td",null,"-"),l("td",null,"✔")],-1),St=l("td",null,"✔",-1),ft=l("td",null,"-",-1),gt=l("td",null,"-",-1),Ct=l("tr",null,[l("td",null,".NET ORM 查询时，使用分组聚合(GroupBy/Having)"),l("td",null,"✔"),l("td",null,"✔"),l("td",null,"✔")],-1),Ft=l("tr",null,[l("td",null,".NET ORM 查询时，使用 Linq To Sql 语法"),l("td",null,"✔"),l("td",null,"✔"),l("td",null,"-")],-1),bt=l("td",null,"✔",-1),qt=l("td",null,"-",-1),yt=l("td",null,"-",-1);function kt(Dt,xt){const e=o("ExternalLinkIcon"),d=o("RouterLink");return r(),_("div",null,[h,a,E,T,l("p",null,[t("肯请动一动手指多多转发转发文章，并加上原文链接，谢谢！MarkDown："),l("a",O,[t("https://files.cnblogs.com/files/kellynic/ORM_VS.zip"),n(e)])]),M,l("table",null,[R,l("tbody",null,[N,p,l("tr",null,[m,l("td",null,[l("a",S,[t("dotnetcore(NCC)"),n(e)])]),f,g]),C,F,b,q,y,k,D])]),x,l("table",null,[v,l("tbody",null,[w,U,L,A,I,W,V,z,B,Q,P,G,H,l("tr",null,[l("td",null,[t(".NET ORM 导航属性(Parent) "),n(d,{to:"/reference/select-as-tree.html"},{default:u(()=>[t("父子关系的实体类")]),_:1})]),J,K,j]),X,Y,Z,$,ll,tl,nl,dl,ul,el])]),ol,l("table",null,[sl,l("tbody",null,[rl,_l,il,cl,hl,al,El,Tl,Ol,Ml,Rl,Nl,pl,ml,l("tr",null,[l("td",null,[t(".NET ORM 批量插入 "),l("a",Sl,[t("性能测试结果参考文档"),n(e)])]),fl,gl,Cl]),l("tr",null,[l("td",null,[t(".NET ORM 批量插入时，自动分批 "),n(d,{to:"/reference/insert.html"},{default:u(()=>[t("参考文档")]),_:1})]),Fl,bl,ql]),yl,kl,Dl,xl,vl,wl,Ul,Ll,Al,Il,Wl,Vl,zl,Bl,Ql,Pl,Gl,Hl,Jl,Kl,jl,Xl,Yl,Zl,$l,lt,l("tr",null,[l("td",null,[t(".NET ORM 添加或更新，自动适配 merge into "),n(d,{to:"/reference/insert-or-update.html"},{default:u(()=>[t("参考文档")]),_:1})]),tt,nt,dt]),l("tr",null,[l("td",null,[t(".NET ORM 批量编辑保存 "),n(d,{to:"/reference/insert-or-update.html"},{default:u(()=>[t("参考文档")]),_:1})]),ut,et,ot]),st,rt,_t,it,ct,l("tr",null,[l("td",null,[t(".NET ORM 查询时，动态过滤条件(WhereDynamicFilter) "),n(d,{to:"/reference/select.html"},{default:u(()=>[t("参考文档")]),_:1})]),ht,at,Et]),Tt,Ot,Mt,Rt,Nt,pt,mt,l("tr",null,[l("td",null,[t(".NET ORM 查询时，子查询拼接结果(string.Join) "),n(d,{to:"/reference/select-multi-table.html"},{default:u(()=>[t("参考文档")]),_:1})]),St,ft,gt]),Ct,Ft,l("tr",null,[l("td",null,[t(".NET ORM 查询时，针对树形结构表 "),n(d,{to:"/reference/select-as-tree.html"},{default:u(()=>[t("父子关系的实体类")]),_:1})]),bt,qt,yt])])])])}const Ut=s(c,[["render",kt],["__file","vs-entity-framework.html.vue"]]);export{Ut as default};
