import{_ as t}from"./_plugin-vue_export-helper.cdc0426e.js";import{o,c as l,a as e,b as s,d as a,e as r,r as c}from"./app.271c797b.js";const d={},p=e("h1",{id:"freesql-provider-odbc",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#freesql-provider-odbc","aria-hidden":"true"},"#"),s(" FreeSql.Provider.Odbc")],-1),i=e("p",null,"FreeSql.Provider.Odbc 实现 ODBC 访问数据库，ODBC 属于比较原始的技术，更新慢，各大数据库厂支持得标准不一，不到万不得已最好别用 odbc，坑比较多。",-1),u=e("p",null,"FreeSql.Provider.Odbc 做了多种数据库的专用实现：SqlServer、PostgreSQL、Oracle、MySql、达梦、人大金仓，和一种通用实现。",-1),b={href:"http://ado.net",target:"_blank",rel:"noopener noreferrer"},_=e("p",null,"国产数据库大多数都兼容 SqlServer、PostgreSQL、Oracle、MySql 这四种数据库，所以它们也可以用来访问国产数据库。",-1),k=e("h1",{id:"自定义适配",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#自定义适配","aria-hidden":"true"},"#"),s(" 自定义适配")],-1),v=e("p",null,"通用实现为了让用户自己适配更多的数据库，比如连接 mssql 2000、db2 等数据库，牺牲了一些功能：",-1),h=e("ul",null,[e("li",null,"不支持 CodeFirst 自动迁移"),e("li",null,"不支持 DbFirst 接口方法的实现"),e("li",null,"不支持 原来的分页方法，需要自行判断 id 进行分页"),e("li",null,"只支持较少的基础类型：bool,sbyte,short,int,long,byte,ushort,uint,ulong,double,float,decimal,DateTime,byte[],string,Guid")],-1),m=e("p",null,"使用者只需求重写类 FreeSql.Odbc.Default.OdbcAdapter 就可以自定义访问不同的数据库。",-1),q={href:"https://github.com/2881099/FreeSql/blob/master/Providers/FreeSql.Provider.Odbc/Default/OdbcAdapter.cs",target:"_blank",rel:"noopener noreferrer"},f=r(`<div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">class</span> <span class="token class-name">Mssql2000Adapter</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">FreeSql<span class="token punctuation">.</span>Odbc<span class="token punctuation">.</span>Default<span class="token punctuation">.</span>OdbcAdapter</span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> InsertAfterGetIdentitySql <span class="token operator">=&gt;</span> <span class="token string">&quot;SELECT SCOPE_IDENTITY()&quot;</span><span class="token punctuation">;</span>
    <span class="token comment">//可以重写更多的设置</span>
<span class="token punctuation">}</span>

fsql<span class="token punctuation">.</span><span class="token function">SetOdbcAdapter</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">Mssql2000Adapter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>适配好新的 OdbcAdapter 后，请在 FreeSqlBuilder.Build 之后调用 IFreeSql.SetOdbcAdapter 方法生效。</p>`,2);function S(O,g){const n=c("ExternalLinkIcon");return o(),l("div",null,[p,i,u,e("p",null,[s("和原来的 FreeSql.Provider.SqlServer 等 "),e("a",b,[s("ado.net"),a(n)]),s(" 相比，只支持较少的基础类型，其他功能几乎都有，包括 CodeFirst 自动迁移。")]),_,k,v,h,m,e("p",null,[s("我们默认做了一套 sqlserver 的语法和映射适配，代码在 "),e("a",q,[s("Default/OdbcAdapter.cs"),a(n)]),s("，请查看代码了解。")]),f])}const A=t(d,[["render",S],["__file","freesql-provider-odbc.html.vue"]]);export{A as default};
